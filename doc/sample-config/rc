# 代理服务器监听地址，用逗号分隔多个地址，或者重复多次来指定多个地址
# 0.0.0.0 表示监听本机所有 IP 地址
# PAC url 为 http://<listen>/pac，其中的代理服务器地址会根据 client 访问 ip 正确生成
# 如果使用端口映射来将 COW 的服务提供到外网，请参考高级选项中的 addrInPAC 选项
listen = 127.0.0.1:7777

# 日志文件路径，如不指定则输出到 stdout
#logFile =

# COW 默认仅对被墙网站使用二级代理
# 下面选项设置为 true 后，所有网站都通过二级代理访问
#alwaysProxy = false

# 指定多个二级代理时使用的负载均衡策略，可选策略如下
#
#   backup: 默认策略，优先使用第一个指定的二级代理，其他仅作备份使用
#   hash:   根据请求的 host name，优先使用 hash 到的某一个二级代理
#
# 一个二级代理连接失败后会依次尝试其他二级代理
# 失败的二级代理会以一定的概率再次尝试使用，因此恢复后会重新启用
#loadBalance = backup

#############################
# 指定二级代理
#############################

# 二级代理统一使用下列语法指定：
#
#   proxy = protocol://[authinfo@]server:port
#
# 重复使用 proxy 多次指定多个二级代理，backup 策略将按照二级代理出现的顺序来使用。
#
# 目前支持的二级代理及配置举例：
#
# SOCKS5:
#   proxy = socks5://127.0.0.1:1080
#
# HTTP:
#   proxy = http://127.0.0.1:8080
#   proxy = http://user:password@127.0.0.1:8080
#
#   用户认证信息为可选项
#
# shadowsocks:
#   proxy = ss://method:password@1.2.3.4:8388
#
#   authinof 中指定加密方法和密码，支持的 method 如下：
#     aes-128-cfb, aes-192-cfb, aes-256-cfb,
#     bf-cfb, cast5-cfb, des-cfb,
#     rc4, table

#############################
# 执行 ssh 命令创建 SOCKS5 代理
#############################

# 下面的选项可以让 COW 执行 ssh 命令创建本地 SOCKS5 代理，并在 ssh 断开后重连
# COW 会自动使用通过 ssh 命令创建的代理，无需再通过 proxy 选项指定
# 可重复指定多个
#
# 注意这一功能需要系统上已有 ssh 命令，且必须使用 ssh public key authentication
#
# 若指定该选项，COW 将执行以下命令：
#     ssh -n -N -D <local_socks_port> -p <server_ssh_port> <user@server>
# server_ssh_port 端口不指定则默认为 22
# 如果要指定其他 ssh 选项，请修改 ~/.ssh/config
#sshServer = user@server:local_socks_port[:server_ssh_port]

#################################
# 执行 plonk 命令创建 SOCKS5 代理
#################################
# 下面的选项可以让 COW 执行 plonk 命令创建本地 SOCKS5 代理，并在 plonk 断开后重连
# COW 会自动使用通过 plonk 命令创建的代理，无需再通过 proxy 选项指定
# 可重复指定多个
#
# 注意:这一功能需要系统上已有 plonk 命令
#
# plonk 是 Putty 中提供的命令行组件plink的改进版，可以支持混淆加密
#
# Windows   用户可以在 http://www.mrhinkydink.com/potty.htm 下载
# Linux/Mac 用户可以在 https://www.github.com/athurg/potty 下载
plonkUsername = user
plonkPassword = password
plonkHost = www.test.com
plonkPort = 22
plonkListenPort = 7070
plonkOfcKeyword = ofc_keyword

#############################
# 认证
#############################

# 指定允许的 IP 或者网段。网段仅支持 IPv4，可以指定 IPv6 地址，用逗号分隔多个项
# 使用此选项时别忘了添加 127.0.0.1，否则本机访问也需要认证
#allowedClient = 127.0.0.1, 192.168.1.0/24, 10.0.0.0/8

# 要求客户端通过用户名密码认证
# COW 总是先验证 IP 是否在 allowedClient 中，若不在其中再通过用户名密码认证
#userPasswd = username:password

# 如需指定多个用户名密码，可在下面选项指定的文件中列出，文件中每行内容如下
#   username:password[:port]
# port 为可选项，若指定，则该用户只能从指定端口连接 COW
# 注意：如有重复用户，COW 会报错退出
#userPasswdFile = /path/to/file

# 认证失效时间
# 语法：2h3m4s 表示 2 小时 3 分钟 4 秒
#authTimeout = 2h

#############################
# 高级选项
#############################

# 最多允许使用多少个 CPU 核
#core = 2

# 允许建立隧道连接的端口，多个端口用逗号分隔，可重复多次
# 默认总是允许下列服务的端口: ssh, http, https, rsync, imap, pop, jabber, cvs, git, svn
# 如需允许其他端口，请用该选项添加
# 限制隧道连接的端口可以防止将运行 COW 的服务器上只监听本机 ip 的服务暴露给外部
#tunnelAllowedPort = 80, 443

# GFW 会使 DNS 解析超时，也可能返回错误的地址，能连接但是读不到任何内容
# 下面两个值改小一点可以加速检测网站是否被墙，但网络情况差时可能误判

# 创建连接超时（语法跟 authTimeout 相同）
#dialTimeout = 5s
# 从服务器读超时
#readTimeout = 5s

# 基于 client 是否很快关闭连接来检测 SSL 错误，只对 Chrome 有效
# （Chrome 遇到 SSL 错误会直接关闭连接，而不是让用户选择是否继续）
# 可能将可直连网站误判为被墙网站，当 GFW 进行 SSL 中间人攻击时可以考虑使用
#detectSSLErr = false

# 如果使用端口映射，可用下列选项指定对应 listen ip 地址提供的 PAC 中代理服务器的地址
# 此选项中地址数量需跟 listen 中地址数量一致，可用空字符串表示与 listen ip 一致
# 例如，下面例子中，访问 192.168.1.1:9999 得到的 PAC 中的代理地址为 2.2.2.2:3456
#     listen = 192.168.1.1:8888, 192.168.1.1:9999
#     addrInPAC = , 2.2.2.2:3456
#addrInPAC = 127.0.0.1:7777
